#!/usr/bin/make -f

SHELL := bash
make := $(lastword $(MAKEFILE_LIST))
$(make):;
.DEFAULT_GOAL := main

define check
$(or
  $(or $(and $(filter $(words $(MAKECMDGOALS)), 0),
             $(filter $(shell tty | tr ' ' _), not_a_tty)),
       $(and $(filter $(words $(MAKECMDGOALS)), 1),
             $(filter $(MAKECMDGOALS), help install))),
  $(error usage: "$(make) [install|help]" or "SYSLOG-NG | $(make)"))
endef
. := $(strip $(check))

bin    ?= /usr/local/bin
prefix ?= /space/log2

define help
echo -e "\tmake -f $(MAKEFILE_LIST) install [bin=PATH (default /usr/local/bin)]"
echo -e "\t\tinstall this Makefile in $(bin)"
echo -e "\t$(make) main"
echo -e "\t\tdispatch lines from STDIN in LOGDIR/FILE made from concatenation of first field and second field without PREFIX"
echo -e "\t$(make) [OPTIONS] main"
echo -e "\t\tpass OPTIONS as Make variables"
echo -e "\t\t\t[erase=BOOL (default False)]"
echo -e "\t\t\t[prefix=PATH (default $(prefix))]"
echo -e ""
echo -e "\t\tset erase to Make True (!\"\") to not concatenate upon destination files"
endef

define awk
BEGIN { path = "^/([[:alnum:]_.-]+/?)+$$" }
($$1 !~ path) || ($$2 !~ path) { exit(2) }
NR == 1 || previous != $$1 { system("mkdir -p " $$1); previous = $$1 }
{
  cmd = substr($$0, index($$0, $$3));
  file = $$1 substr($$2, length("$(prefix)") + 1);
  if (erase) print cmd > file; else print cmd >> file; fflush()
}
endef

ifeq ($(if $(filter $(MAKECMDGOALS), install),T),T)
install := $(bin)/$(make)
$(install): $(make); sudo install $< $(@D)
install: $(install);
else ifeq ($(if $(filter $(MAKECMDGOALS), help),T),T)
help:; @$($@)
else
main:; @gawk $(if $(erase),-v erase=1) '$(strip $(awk))'
.PHONY: main
endif

# Local Variables:
# Mode: makefile-gmake
# End:
